name: Check and publish

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

  release:
    types: [created]

jobs:
  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install black flake8 isort
      - run: black --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  checks:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        method: ["conda", "ecmwflibs"]
        # exclude:
        # - platform: windows-latest
        #   method: conda
        # - platform: macos-latest
        #   method: conda

    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }} (${{ matrix.method }})
    runs-on: ${{ matrix.platform }}
    needs: quality

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get tests
        run: git clone --depth 1 https://github.com/ecmwf/magics-test.git

      - if: matrix.method == 'conda'
        name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge

      - if: matrix.method == 'conda'
        run: conda install Magics

      - if: matrix.method == 'ecmwflibs'
        name: Install ecmwflibs
        run: pip install ecmwflibs

      - run: python setup.py develop
      - run: pip install -r tests/requirements.txt
      - run: pip freeze
      - run: env | sort
      - run: python -m Magics selfcheck

      - run: pytest
        env:
          MAGICS_PYTHON_TESTS: magics-test/test/gallery

  deploy:
    if: ${{ github.event_name == 'release' }}

    name: Upload to Pypi
    needs: checks

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Check version
        run: |
          release=${GITHUB_REF##*/}
          version=$(python setup.py --version)
          test "$release" == "$version"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist
          twine upload dist/*

  notify:
    if: ${{ github.event_name == 'release' }}

    name: Send notifications
    needs: deploy

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        repo:
          - climetlab
          - ecmwflibs

    steps:
      - name: Notify ${{ matrix.repo }}
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.NOTIFY_ECMWFLIBS }}
          repo: ${{ matrix.repo }}
          owner: ecmwf
          event_type: magics-python-updated

  dispatch:
    name: dispatch
    needs:
    - quality
    - checks
    runs-on: ubuntu-20.04
    steps:
    - name: Run Regression Tests
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.GH_PAT }}
        repository: ecmwf/magics-test
        event-type: magics-python-updated
        client-payload: '{"magics_python_ref": "${{ github.ref }}", "magics_python_sha": "${{ github.sha }}"}'

  notify-teams:
    name: notify
    runs-on: ubuntu-20.04
    needs:
    - quality
    - checks
    - deploy
    - notify
    - dispatch
    if: always() && github.ref == 'refs/heads/master'
    steps:
    - name: Notify Teams
      uses: ecmwf-actions/notify-teams@v1
      with:
        incoming_webhook: ${{ secrets.MS_TEAMS_INCOMING_WEBHOOK }}
        needs_context: ${{ toJSON(needs) }}
        workflow_id: check-and-publish.yml
